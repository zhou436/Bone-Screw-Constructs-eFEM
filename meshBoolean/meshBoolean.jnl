# -*- coding: mbcs -*-
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models.changeKey(fromName='Model-1', toName='contiOpti')
mdb.models['contiOpti'].ConstrainedSketch(name='__profile__', sheetSize=20.0)
mdb.models['contiOpti'].sketches['__profile__'].CircleByCenterPerimeter(center=
    (0.0, 0.0), point1=(0.0, 2.0))
mdb.models['contiOpti'].Part(dimensionality=THREE_D, name='Screw', type=
    DEFORMABLE_BODY)
mdb.models['contiOpti'].parts['Screw'].BaseSolidExtrude(depth=10.0, sketch=
    mdb.models['contiOpti'].sketches['__profile__'])
del mdb.models['contiOpti'].sketches['__profile__']
mdb.models['contiOpti'].parts['Screw'].Chamfer(edgeList=(
    mdb.models['contiOpti'].parts['Screw'].edges[1], ), length=1.9)
mdb.models['contiOpti'].parts['Screw'].DatumPlaneByPrincipalPlane(offset=0.0, 
    principalPlane=XZPLANE)
mdb.models['contiOpti'].ConstrainedSketch(gridSpacing=0.56, name='__profile__', 
    sheetSize=22.71, transform=
    mdb.models['contiOpti'].parts['Screw'].MakeSketchTransform(
    sketchPlane=mdb.models['contiOpti'].parts['Screw'].datums[3], 
    sketchPlaneSide=SIDE1, 
    sketchUpEdge=mdb.models['contiOpti'].parts['Screw'].edges[2], 
    sketchOrientation=TOP, origin=(0.0, 0.0, 5.0)))
mdb.models['contiOpti'].parts['Screw'].projectReferencesOntoSketch(filter=
    COPLANAR_EDGES, sketch=mdb.models['contiOpti'].sketches['__profile__'])
mdb.models['contiOpti'].sketches['__profile__'].Line(point1=(-2.0, -5.0), 
    point2=(-0.95, -5.2))
mdb.models['contiOpti'].sketches['__profile__'].Line(point1=(-0.95, -5.2), 
    point2=(-0.95, -6.7))
mdb.models['contiOpti'].sketches['__profile__'].VerticalConstraint(
    addUndoState=False, entity=
    mdb.models['contiOpti'].sketches['__profile__'].geometry[3])
mdb.models['contiOpti'].sketches['__profile__'].Line(point1=(-0.95, -6.7), 
    point2=(-2.0, -6.7))
mdb.models['contiOpti'].sketches['__profile__'].HorizontalConstraint(
    addUndoState=False, entity=
    mdb.models['contiOpti'].sketches['__profile__'].geometry[4])
mdb.models['contiOpti'].sketches['__profile__'].PerpendicularConstraint(
    addUndoState=False, entity1=
    mdb.models['contiOpti'].sketches['__profile__'].geometry[3], entity2=
    mdb.models['contiOpti'].sketches['__profile__'].geometry[4])
mdb.models['contiOpti'].sketches['__profile__'].Line(point1=(-2.0, -6.7), 
    point2=(-2.0, -5.0))
mdb.models['contiOpti'].sketches['__profile__'].VerticalConstraint(
    addUndoState=False, entity=
    mdb.models['contiOpti'].sketches['__profile__'].geometry[5])
mdb.models['contiOpti'].sketches['__profile__'].PerpendicularConstraint(
    addUndoState=False, entity1=
    mdb.models['contiOpti'].sketches['__profile__'].geometry[4], entity2=
    mdb.models['contiOpti'].sketches['__profile__'].geometry[5])
mdb.models['contiOpti'].sketches['__profile__'].ConstructionLine(point1=(0.0, 
    2.0), point2=(0.0, 0.0))
mdb.models['contiOpti'].sketches['__profile__'].VerticalConstraint(
    addUndoState=False, entity=
    mdb.models['contiOpti'].sketches['__profile__'].geometry[6])
mdb.models['contiOpti'].parts['Screw'].CutRevolve(angle=5400.0, 
    flipPitchDirection=ON, flipRevolveDirection=OFF, moveSketchNormalToPath=OFF
    , pitch=1.75, sketch=mdb.models['contiOpti'].sketches['__profile__'], 
    sketchOrientation=TOP, sketchPlane=
    mdb.models['contiOpti'].parts['Screw'].datums[3], sketchPlaneSide=SIDE1, 
    sketchUpEdge=mdb.models['contiOpti'].parts['Screw'].edges[2])
del mdb.models['contiOpti'].sketches['__profile__']
mdb.models['contiOpti'].ConstrainedSketch(name='__profile__', sheetSize=20.0)
mdb.models['contiOpti'].sketches['__profile__'].rectangle(point1=(-5.0, -5.0), 
    point2=(5.0, 5.0))
mdb.models['contiOpti'].Part(dimensionality=THREE_D, name='Cube', type=
    DEFORMABLE_BODY)
mdb.models['contiOpti'].parts['Cube'].BaseSolidExtrude(depth=10.0, sketch=
    mdb.models['contiOpti'].sketches['__profile__'])
del mdb.models['contiOpti'].sketches['__profile__']
mdb.models['contiOpti'].rootAssembly.DatumCsysByDefault(CARTESIAN)
mdb.models['contiOpti'].rootAssembly.Instance(dependent=OFF, name='Cube-1', 
    part=mdb.models['contiOpti'].parts['Cube'])
mdb.models['contiOpti'].rootAssembly.Instance(dependent=OFF, name='Screw-1', 
    part=mdb.models['contiOpti'].parts['Screw'])
mdb.models['contiOpti'].rootAssembly.translate(instanceList=('Screw-1', ), 
    vector=(0.0, 0.0, 1.0))
mdb.models['contiOpti'].rootAssembly.seedPartInstance(deviationFactor=0.1, 
    minSizeFactor=0.1, regions=(
    mdb.models['contiOpti'].rootAssembly.instances['Cube-1'], ), size=1.0)
mdb.models['contiOpti'].rootAssembly.seedPartInstance(deviationFactor=0.1, 
    minSizeFactor=0.1, regions=(
    mdb.models['contiOpti'].rootAssembly.instances['Screw-1'], ), size=0.25)
mdb.models['contiOpti'].rootAssembly.setMeshControls(elemShape=TET, regions=
    mdb.models['contiOpti'].rootAssembly.instances['Screw-1'].cells.getSequenceFromMask(
    ('[#1 ]', ), ), technique=FREE)
mdb.models['contiOpti'].rootAssembly.setElementType(elemTypes=(ElemType(
    elemCode=C3D20R, elemLibrary=STANDARD), ElemType(elemCode=C3D15, 
    elemLibrary=STANDARD), ElemType(elemCode=C3D10, elemLibrary=STANDARD)), 
    regions=(
    mdb.models['contiOpti'].rootAssembly.instances['Screw-1'].cells.getSequenceFromMask(
    ('[#1 ]', ), ), ))
mdb.models['contiOpti'].rootAssembly.generateMesh(regions=(
    mdb.models['contiOpti'].rootAssembly.instances['Cube-1'], 
    mdb.models['contiOpti'].rootAssembly.instances['Screw-1']))
# Save by zyj19 on 2022_08_08-08.03.12; build 2020 2019_09_13-19.49.31 163176
