function abaInp(nodeCoor, eleCell, nodePreci, fileName, abaData)
% build Abaqus inp file
% Convert 3d image to voxel-based 8-node mesh
% input nodeCoor:  node list combined the nodes number and coordinates (x,y,z)
% input eleCell:   element cell, (n,10) [element number, intensity, nodes(8)]
% input eleType:   element types (e.g. C3D8, C3D8R)
% input precision: precision of node coordinates
% input fileName:  filename of the output inp file

% fileName = 'printInpTemp';
fid=fopen(sprintf('%s.inp',fileName),'wW');
% ------------------------------------------------------------------------
% Print Heading
headingKWs = [...
    '*Heading\n'...
    '** Job name: Job-1 Model name: contiOpti\n'...
    '** Generated by: Abaqus/CAE 2020\n'...
    '*Preprint, echo=NO, model=NO, history=NO, contact=NO\n'...
    ];
fprintf(fid, headingKWs);
fprintf(fid, '** \n');
fprintf(fid, '** ----------------------------------------------------------------\n');

% Print Parts from Assemblys
abaInpParts(fid, nodeCoor, eleCell, nodePreci, abaData.Bone.Parts);

% Print Element controls
abaInpEleCon(fid);

% Print Amplitudes
abaInpAmp(fid);

% Print Material properties (CDP)

abaInpMatCDP(fid, abaData.Bone.MAT);

% Print Material properties (Linear Elastic)
% matName = 'Screw';
% abaInpMatLE(fid, matName);

% Print interactions
abaInpInteraction(fid, abaData.fricCoeef);

% Print Step

abaInpStep(fid, abaData.mSFactor);

% Print Boundary conditions (BC)
abaInpBC(fid, abaData.displacement);

% Print Outputs
abaInpOutReq(fid);

fclose(fid);
disp('Check the inp file!');
end