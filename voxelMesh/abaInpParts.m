function abaInpParts(fid, nodeCoor, eleCell, eleType, nodePreci)
% Print Abaqus .inp material part
% input fid:        File ID
% input matName:    Material name, a string

% fileName = 'printInpTemp';
% fid=fopen(sprintf('%s.inp',fileName),'wW');

% partNum = length(eleCell);
partNum = 1;
% format of number
% '%.(precision)f'
nodeFormat = ['%.', num2str(nodePreci), 'f'];

% Print Heading of material section
fprintf(fid, '** ----------------------------------------------------------------\n');
fprintf(fid, '** \n');
% fprintf(fid, ...
%     ['** ----------------------------------------------------------------\n'...
%     '** \n'...
%     '** MATERIALS\n'...
%     '** \n'...
%     '*Material, name=%s\n'], matName);

% fprintf(fid, [...
%     '*Part, name=Bone\n'...
%     '*End Part\n'...
%     '**\n'...
%     '**\n'...
%     '** ASSEMBLY\n'...
%     '**\n'...
%     '*Assembly, name=Assembly\n'...
%     '**\n'...
%     ]);

fprintf(fid, [...
    '*Part, name=Bone\n'...
    '*End Part\n'...
    '**\n'...
    '**\n'...
    '** ASSEMBLY\n'...
    '**\n'...
    '*Assembly, name=Assembly\n'...
    '**\n'...
    '*Instance, name=Bone-1, part=Bone\n'...
    ]);

% ------------------------------------------------------------------------
% Node
fprintf(fid, '*Node\n');

% print coordinates of nodes
% '%d,%.4f,%.4f,%.4f\n'
fprintf(fid, ...
    ['%d,', nodeFormat, ',', ...
    nodeFormat, ',', ...
    nodeFormat, '\n'], ...
    nodeCoor');

% ------------------------------------------------------------------------
% Element % to be optimized, can accelerate here!
for ii = 1: partNum
    fprintf(fid, [...
        '*Element, type=%s, elset=Set-%d'  '\n'...
        ], eleType, ii);
    printEle(fid, eleCell(:,[1 3:10]));
    fprintf(fid, [...
        '** Section: Screw\n'...
        '*Solid Section, elset=Set-%d, controls=EC-1, material=Bone\n'...
        ',\n'...
        '*End Instance\n'...
        '*End Assembly\n'...
        ],ii);      
end

% ------------------------------------------------------------------------
% Section
% for ii = 1: partNum
%     fprintf(fid, [...
%         '** Section: Section-%c'            '\n'...
%         '*Solid Section, elset=Set-%c, material=Material-%c'  '\n'...
%         ','                                 '\n'...
%         ], ...
%         sect_char(ii), ...
%         sect_char(ii), sect_char(ii));
%
% end


% Print Ending of material section
fprintf(fid, '** \n');
fprintf(fid, '** ----------------------------------------------------------------\n');
% fclose(fid);
end

function printEle(fid, ele)
fprintf(fid, ...
    [repmat('%d,', [1,8]), '%d', '\n'], ...
    ele');
end